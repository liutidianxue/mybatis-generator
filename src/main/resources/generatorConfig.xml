<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE generatorConfiguration PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--数据库驱动 -->
    <properties resource="jdbc.properties" />


    <!-- 用户相关 -->
    <context id="DB2Tables" targetRuntime="MyBatis3">
        <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!-- 数据库连接-->
        <jdbcConnection driverClass="${jdbc.driverClassName}"
                        connectionURL="${jdbc.url}"
                        userId= "${jdbc.username}"
                        password= "${jdbc.password}">
        </jdbcConnection>

        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
           NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver >
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!--指定javaBean生成的位置 javaBean生成的位置-->
        <javaModelGenerator targetPackage="com.kayak.demo.mybatis.entity" targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true" />
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true" />
        </javaModelGenerator>

        <!--sql映射文件生成的位置-->
        <sqlMapGenerator targetPackage="com.kayak.demo.mybatis.dao"  targetProject="src/main/resources">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!--指定dao接口生成的位置-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.kayak.demo.mybatis.dao"  targetProject="src/main/java">
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>

        <!--table是指定每个表的生成策略 生成对应表及类名-->
        <!--<table tableName="t_user" domainObjectName="User"></table>
        <table tableName="t_admin" domainObjectName="Admin"></table>
        <table tableName="t_menu" domainObjectName="Menu"></table>
        <table tableName="t_order" domainObjectName="Order"></table>
        <table tableName="t_type" domainObjectName="Type"></table>-->

        <!-- 这样不用像上面那个一个一个写出来，自动匹配所有，不过类的名字会有变化，变成  XXxxxx  t_aaa_bbb->TAxxBxx -->
        <table schema="" tableName="%"></table>

    </context>
</generatorConfiguration>
